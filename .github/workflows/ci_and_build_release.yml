name: Tests and build wheels

# Run regularly, so updates to cibuildwheel and environment are checked
on:
  push:
  schedule:
    - cron: "0 6 1 * *"

jobs:
  ci:
    name: Tests ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, windows-2022, macos-11 ]
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11.0-beta.3" ]

    steps:
      - name: Set git to not change line endings
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build module and run pytest
        run: |
          pip install wheel setuptools
          pip install -r tests/requirements.txt
          pip install . -v
          python -c "import sabyenc3; print('Version:', sabyenc3.__version__);"
          python -c "import sabyenc3; print('SIMD:', sabyenc3.simd);"
          pytest

  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.linux_arch }}
    needs: ci
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
          - os: macos-11
          - os: ubuntu-20.04
            linux_arch: x86_64
          - os: ubuntu-20.04
            linux_arch: i686
          - os: ubuntu-20.04
            linux_arch: aarch64

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'
      - name: Set up QEMU
        if: runner.os == 'Linux' && matrix.linux_arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Build source distribution
        run: python setup.py sdist
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        env:
          CIBW_SKIP: pp* cp36*
          CIBW_ARCHS_LINUX: ${{ matrix.linux_arch }}
          CIBW_ARCHS_MACOS: universal2
          CIBW_BUILD_VERBOSITY: 1
      - uses: actions/upload-artifact@v3
        with:
          path: |
            ./wheelhouse/*.whl
            ./dist/*.tar.gz
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_SABYENC_API_TOKEN }}
        if: env.TWINE_PASSWORD && startsWith(github.ref, 'refs/tags/')
        run: |
          pip install twine
          twine upload --skip-existing ./dist/*.tar.gz ./wheelhouse/*.whl
      - name: Publish release to GitHub
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        if: startsWith(github.ref, 'refs/tags/') && runner.os == 'Linux' && matrix.linux_arch == 'aarch64'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: ./dist/*.tar.gz
