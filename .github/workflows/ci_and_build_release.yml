name: Tests and build wheels

on: [push, pull_request]

jobs:
  ci:
    name: Tests ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12', '3.13', '3.14-dev' ]

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build module and run pytest
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools
          pip install -r tests/requirements.txt
          pip install . -v
          python -c "import sabctools; print('Version:', sabctools.__version__);"
          python -c "import sabctools; print('SIMD:', sabctools.simd);"
          python -c "import sabctools; print('OpenSSL linked:', sabctools.openssl_linked);"
          pytest

  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.linux_arch }}
    needs: ci
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
          - os: ubuntu-latest
            linux_arch: x86_64
          - os: ubuntu-24.04-arm
            linux_arch: aarch64

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        name: Install Python
        with:
          python-version: "3.13"
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_SKIP: '*i686*'
          CIBW_ARCHS_LINUX: ${{ matrix.linux_arch }}
          CIBW_ARCHS_MACOS: universal2
          CIBW_ARCHS_WINDOWS: AMD64 ARM64
          CIBW_TEST_SKIP: '*'
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: Wheels ${{ matrix.os }} ${{ matrix.linux_arch }}
      # The action/upload-artifact only allows unique filenames for whole run
      # Need to build it on every arch otherwise twine fails
      - name: Build source distribution
        run: |
          pip install wheel setuptools
          python setup.py sdist
      - name: Upload source distribution artifact
        uses: actions/upload-artifact@v4
        if: runner.os == 'macOS'
        with:
          path: ./dist/*.tar.gz
          name: Source distribution
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
        if: env.TWINE_PASSWORD && startsWith(github.ref, 'refs/tags/')
        run: |
          pip install twine
          twine upload --skip-existing ./dist/*.tar.gz ./wheelhouse/*.whl
      - name: Publish release to GitHub
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') && runner.os == 'macOS'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: ./dist/*.tar.gz
